/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dict.gui.swing;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowAdapter;
import dict.obj.*;


/**
 *
 * @author Sabari
 */
public class SearchWord extends javax.swing.JFrame {

    /**
     * Creates new form SearchWord
     */
    
    private final String fieldEmptyWarning = "Search Field is empty";
    private WordObject word;
    private DictionaryInterface di;
    
    public SearchWord(boolean admin, DictionaryInterface di) {
        initComponents();
        
        this.di = di;
        if(admin){
           addWordButton.setEnabled(true);
        }
        else{
           addWordButton.setVisible(false);
        }
        
       searchButton.addActionListener(
               new ActionListener(){
                   public void actionPerformed(ActionEvent ae){
                       String searchWord = wordField.getText();
                       resultArea.setText("");
                       if(searchWord.length() == 0){
                           warnings.setText(fieldEmptyWarning);
                       }
                       else{
                           warnings.setText("  ");
                           try{
                               word = di.searchWord(searchWord);
                               String result = word.toString();
                            
                               PartOfSpeech ps = word.getNextPartOfSpeech();
                               while(ps != null) {
                                       result += "\n";
                                       result += ps.toString();
                                       ContextMeaning cm = ps.getNextMeaning();
                                       while(cm != null) {
                                               result += "\n";
                                               result += cm.toString();
                                               cm = ps.getNextMeaning();
                                       }
                                       ps = word.getNextPartOfSpeech();
                               }
                               
                               Idiom idiom = word.getNextIdiom();
                               if(idiom != null)
                                       result+="\n\nIDIOMS:";
                               while(idiom != null) {
                                       result+="\n";
                                       result += idiom.toString();
                                       idiom = word.getNextIdiom();
                               }
                               PhrasalVerb pv = word.getNextPhrasalVerb();
                               if(pv != null)
                                       result += "\n\nPhrasal Verbs:";
                               while(pv != null) {
                                       result += "\n";
                                       result += pv.toString();
                                       pv = word.getNextPhrasalVerb();
                                }
                               
                               resultArea.setText(result);
                           }
                           catch(Exception e){
                               resultArea.setText(e.getMessage());
                           }
                       }
                   }
               }
       );
       
       addWordButton.addActionListener(
               new ActionListener(){
                   public void actionPerformed(ActionEvent ae){
                       createAddWord();
                   }
               }
       );
       
       addWindowListener(
             new WindowAdapter(){
                 @Override
                 public void windowClosed(WindowEvent we){
                     DictionaryInterface.exitApplication();
                 }
             }
       );
       
       setVisible(true);
    }

    private void createAddWord(){
               
        new AddWord(this,di);
        setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wordField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();
        addWordButton = new javax.swing.JButton();
        warnings = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dictionary");
        setResizable(false);

        searchButton.setText("Search");

        resultArea.setColumns(20);
        resultArea.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        resultArea.setRows(5);
        jScrollPane1.setViewportView(resultArea);

        addWordButton.setText("Add Word");
        addWordButton.setEnabled(false);

        warnings.setForeground(new java.awt.Color(204, 0, 51));
        warnings.setText("  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(warnings, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(wordField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(addWordButton, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(warnings)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addWordButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWordButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel warnings;
    private javax.swing.JTextField wordField;
    // End of variables declaration//GEN-END:variables
}
